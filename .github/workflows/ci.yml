name: CI

on: [push]

env:
  CARGO_TERM_COLOR: always

jobs:
  lint_libs:
    name: Lint Libraries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        library: [wire-protocols, env-config, bootloader-support]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install toolchain and components
        run: rustup component add rustfmt clippy

      - name: Check
        working-directory: libraries/${{ matrix.library }}
        run: cargo check --all-features --target x86_64-unknown-linux-gnu

      - name: Clippy
        working-directory: libraries/${{ matrix.library }}
        run: cargo clippy --all-features --target x86_64-unknown-linux-gnu

      - name: Format
        working-directory: libraries/${{ matrix.library }}
        run: cargo fmt --all -- --check

      - name: Doc Generation
        working-directory: libraries/${{ matrix.library }}
        run: cargo doc --workspace --bins --examples --all-features --no-deps --target x86_64-unknown-linux-gnu

  test_libs:
    name: Test Libraries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        library: [wire-protocols, env-config]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install toolchain and components
        run: rustup component add rustfmt clippy

      - name: Test
        working-directory: libraries/${{ matrix.library }}
        run: cargo test --target x86_64-unknown-linux-gnu

  lint_fw:
    name: Lint Firmware
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install toolchain and components
        run: rustup component add rustfmt clippy

      - name: Check
        run: cargo check --all-features

      - name: Clippy
        run: cargo clippy --all-features

      - name: Format
        run: cargo fmt --all -- --check

      - name: Doc Generation
        run: cargo doc --workspace --bins --examples --all-features --no-deps

  build_fw:
    name: Build Firmware
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install toolchain and components
        run: rustup component add rustfmt clippy llvm-tools-preview

      - name: Install binutils, flip-link
        run: cargo install cargo-binutils flip-link

      - name: Build debug binary
        run: cargo build

      - name: Build release binary
        run: cargo build --release

      - name: Print firmware size
        run: |
          cargo size --release
          echo '## Firmware size' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cargo size --release >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  lint_cli:
    name: Lint CLI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install toolchain and components
        run: rustup component add rustfmt clippy

      - name: Check
        run: cargo check --all-features

      - name: Clippy
        run: cargo clippy --all-features
        working-directory: host_tools/air-gradient-cli

      - name: Format
        run: cargo fmt --all -- --check
        working-directory: host_tools/air-gradient-cli

      - name: Doc Generation
        run: cargo doc --workspace --bins --examples --all-features --no-deps
        working-directory: host_tools/air-gradient-cli

  build_cli:
    name: Build CLI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install toolchain and components
        run: rustup component add rustfmt clippy

      - name: Build debug binary
        run: cargo build --all-features
        working-directory: host_tools/air-gradient-cli

      - name: Build release binary
        run: cargo build --release --all-features
        working-directory: host_tools/air-gradient-cli

  test_cli:
    name: Test CLI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install toolchain and components
        run: rustup component add rustfmt clippy

      - name: Test
        run: cargo test
        working-directory: host_tools/air-gradient-cli
