@startuml

skinparam defaultTextAlignment center
/'skinparam monochrome reverse'/

title Application Update

start

group Boot Configuration
    :Read BC from FLASH
    (Boot Configuration);

    if (BC.magic invalid OR BC.crc invalid) then(BC invalid)
        :Hold watchdog
        and reset;
        note left
            TODO - either watchdog
            or system reset
            once protocol is defined
            bootloader will re-init
            BC
        end note
        stop
    else (BC valid)
    endif
end group

:Read and clear reset_reason;

group Application Update | complete pending update after reboot
    if (UCS.update_pending AND reset_reason == SW) then(reboot from update)
        :Finish update procedure;
        note left
            After watchdog is started
            After initialization to
            sanity check things
            (complete_pending_update())
        end note

        :Write UCS words to RAM
        UCS.update_pending = MAGIC_TRUE
        UCS.update_valid = MAGIC_TRUE;

        :Trigger SW reset;
        note left
            The bootloader will see
            this ACK and write
            the BC to FLASH
        end note

        stop
    elseif (UCS.update_pending AND reset_reason != SW) then(failed update reboot)
        :Abort the update;
        :Write UCS words to RAM
        UCS.update_pending = 0
        UCS.update_valid = 0;
        :Hold watchdog
        and reset;
        stop
    else (normal boot)
    endif
end group

:Normal application
operations;

group Application Update
    :Receive firmware-update-begin
    command;
    note left
        TODO add to design
        If any of these fail
        we abort the entire
        process
    end note
    note right
        Probably show a
        message on the display
        for these too
    end note

    :Erase other slot sectors;
    note right
        "other" slot ==
        BC.firmware_boot_slot.other()
    end note

    repeat
        :Read binary chunk;
        :Write chunk to other slot;
        repeat while (TBD is-done OR full OR timeout?) is (upload-in-progress)
        ->upload-complete;

    if(check crc32(other-slot-image)) then (valid)
        :Write UCS words to RAM
        UCS.update_pending = MAGIC_TRUE;
        note left
            Bootloader will also
            do a CRC check before
            updating the BC
        end note

        :Trigger SW reset;

        stop
        note left
            Bootloader will perform
            checks and boot the new
            slot image
        end note
    else (invalid)
        :Abort the update;
        :Responde with error;
        :Resume normal operation;
        (.)
        detach
    endif
end group

@enduml
